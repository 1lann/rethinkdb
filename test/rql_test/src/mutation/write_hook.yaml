desc: Tests insertion with a write hook function
table_variable_name: tbl
tests:

  - js: tbl.setWriteHook(function(a, b, c) { return c.merge({'num':1})})
    py: tbl.set_write_hook(lambda a,b,c: c.merge({'num':1}))
    rb: tbl.set_write_hook{ |a,b,c| c.merge({'num':1})}
    ot: partial({'created': 1 })

  - cd: tbl.insert({'id': 1})
    ot: partial({'inserted':1, 'errors':0})

  - cd: tbl
    ot: [{"id": 1, "num": 1}]

  - cd: tbl.set_write_hook(null)
    ot: partial({'deleted': 1 })

  - js: tbl.setWriteHook(function(a, b, c) { return c.merge({'num':1})})
    py: tbl.set_write_hook(lambda a,b,c: c.merge({'num':2}))
    rb: tbl.set_write_hook(lambda { |a,b,c| c.merge({'num':2})})
    ot: partial({'created': 1 })

  - js: tbl.setWriteHook(function(a, b, c) { return c.merge({'num':2})})
    py: tbl.set_write_hook(lambda a,b,c: c.merge({'num':2}))
    rb: tbl.set_write_hook(lambda { |a,b,c| c.merge({'num':2})})
    ot: partial({'replaced': 1 })

  - cd: tbl.update({"blah":2})
    ot: partial({'replaced':1, 'errors':0})

  - cd: tbl
    ot: [{"id":1, "blah":2, "num":2}]

  - cd: tbl.set_write_hook(null)
    ot: partial({'deleted': 1 })

  - js: tbl.setWriteHook(function(b) { return 1;})
    py: tbl.set_write_hook(lambda a: 1)
    rb: tbl.set_write_hook(lambda { |b| 1})
    ot: err('ReqlQueryLogicError', 'Write hook functions must expect 3 arguments.')

  - js: tbl.setWriteHook(function(a, b, c) { return r.js(1);})
    py: tbl.set_write_hook(lambda a, b, c: r.js(1))
    rb: tbl.set_write_hook(lambda { |a, b, c| r.js(1)})
    ot: err('ReqlQueryLogicError', 'Could not prove function deterministic.  Write hook functions must be deterministic.')

  - js: tbl.setWriteHook(function(a, b, c) { return null;})
    py: tbl.set_write_hook(lambda a,b,c: null)
    rb: tbl.set_write_hook(lambda { |a,b,c| null})
    ot: partial({'created': 1 })

  - cd: tbl.insert({})
    ot: partial({'first_error': 'Write hook function returned unexpected NULL value.'})

  - cd: tbl.set_write_hook(null)
    ot: partial({'deleted': 1 })

  - js: tbl.setWriteHook(function(a, b, c) { return r.error("OH NOES!")})
    py: tbl.set_write_hook(lambda a,b,c: r.error("OH NOES!"))
    rb: tbl.set_write_hook(lambda { |a,b,c| r.error("OH NOES!")})
    ot: partial({'created': 1 })

  - cd: tbl.insert({})
    ot: partial({'first_error':'Error in write hook: OH NOES!'})

  - cd: tbl.delete()
    ot: partial({'first_error':'Error in write hook: OH NOES!'})

